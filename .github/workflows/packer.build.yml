name: Building Packer AMI 
on:
  workflow_dispatch:
  pull_request:
    branches: ["main"] 

jobs:
#First Job for checking out the webapp code and testing it 
  node_build:
    runs-on: ubuntu-latest
    name: Installing & Testing the webapp (node application)
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - run: npm i
    - run: npm test

#Second job for running packer build 
  packer_build_ami:
    needs: node_build
    runs-on: ubuntu-latest
    name: Building Packer - AMI 
    steps: 
      - name: Step 1 - Checkout code from branch
        uses: actions/checkout@v2

      - name: Step 2 - Zip webapp 
        run: |
          zip -r webapp.zip ./
          ls 

      - name: Step 3 - Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2    

      - name: Step 4 - Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.8.3" # or `latest`    
          
      - name: Step 5 - Run `packer init`
        id: init
        run: "packer init ./aws.pkr.hcl"

      # - name: Step 6 - Run `packer validate`
      #   id: validate
      #   run: "packer validate --var-file=aws.pkrvars.hcl ./aws.pkr.hcl"

      # - name: Step 7 - Run `packer build`
      #   id: build
      #   run: "packer build --var-file=aws.pkrvars.hcl ./aws.pkr.hcl"

      - name: Step 8 - Run `Updating Launch Template with latest AMI id`
        id: updating 
        run: | 
          echo "Deploying Packer Build"
          AMI_ID="ami-0c71751ea2aaa60ef"
          echo "$AMI_ID"
      # - name: Install AWS CLI v2
      #   run: |
      #     $ curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install

      - name: Step 9 - Run `Configuring the launch template`
        id: configuring
        run: |
          aws --version
          aws ec2 describe-launch-templates 
          aws ec2 create-launch-template-version --launch-template-data '{"ImageId":"$AMI_ID"}' --source-version 1 --launch-template-id lt-0d94fbe405b6fc249  --no-cli-pager
          

      - name: Step 10 - Run `Instance Refresh with latest AMI id` 
        id: refreshing
        run: "aws autoscaling start-instance-refresh --auto-scaling-group-name csye6225-asg-spring2023"  